// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TotemPWA.Data;

#nullable disable

namespace TotemPWA.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TotemPWA.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ParentCategoryId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ParentCategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Burgers"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Combos"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Bebidas"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Acompanhamentos"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Molhos"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Artesanais",
                            ParentCategoryId = 1
                        },
                        new
                        {
                            Id = 7,
                            Name = "Tradicionais",
                            ParentCategoryId = 1
                        },
                        new
                        {
                            Id = 8,
                            Name = "Refrigerantes",
                            ParentCategoryId = 3
                        },
                        new
                        {
                            Id = 9,
                            Name = "Sucos",
                            ParentCategoryId = 3
                        },
                        new
                        {
                            Id = 10,
                            Name = "Batatas",
                            ParentCategoryId = 4
                        },
                        new
                        {
                            Id = 11,
                            Name = "Onion Rings",
                            ParentCategoryId = 4
                        });
                });

            modelBuilder.Entity("TotemPWA.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 6,
                            Description = "Pão, carne, queijo e molho especial",
                            Name = "Cheeseburger",
                            Price = 15.99m
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 2,
                            Description = "Cheeseburger + Batata + Refrigerante",
                            Name = "Combo Cheeseburger",
                            Price = 25.99m
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 8,
                            Description = "350ml",
                            Name = "Refrigerante Lata",
                            Price = 6.00m
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 10,
                            Description = "Porção média",
                            Name = "Batata Frita",
                            Price = 8.00m
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 5,
                            Description = "Molho especial barbecue",
                            Name = "Molho Barbecue",
                            Price = 2.00m
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 7,
                            Description = "Pão, carne, queijo e molho especial",
                            Name = "Cheeseburger 2",
                            Price = 15.99m
                        });
                });

            modelBuilder.Entity("TotemPWA.Models.Variation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("AdditionalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("Variations");
                });

            modelBuilder.Entity("TotemPWA.Models.Category", b =>
                {
                    b.HasOne("TotemPWA.Models.Category", "ParentCategory")
                        .WithMany("Subcategories")
                        .HasForeignKey("ParentCategoryId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("ParentCategory");
                });

            modelBuilder.Entity("TotemPWA.Models.Product", b =>
                {
                    b.HasOne("TotemPWA.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("TotemPWA.Models.Variation", b =>
                {
                    b.HasOne("TotemPWA.Models.Product", "Product")
                        .WithMany("Variations")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("TotemPWA.Models.Category", b =>
                {
                    b.Navigation("Products");

                    b.Navigation("Subcategories");
                });

            modelBuilder.Entity("TotemPWA.Models.Product", b =>
                {
                    b.Navigation("Variations");
                });
#pragma warning restore 612, 618
        }
    }
}
