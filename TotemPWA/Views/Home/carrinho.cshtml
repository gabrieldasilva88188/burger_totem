@{
  Layout = "_WelcomeLayout";
  var cardapioUrl = Url.Action("Cardapio", "Home");
}

<!DOCTYPE html>
<html lang="pt-BR">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Carrinho - Totem FastFood</title>
  <link rel="stylesheet" href="@Url.Content("~/css/carrinho.css")">
</head>

<body>

  <header>


  </header>

  <div class="headCar">
    <h1> Carrinho de (usuario)</h1>
    <button class="back-btn" onclick="redirecionarCardapio()">← Voltar</button>
  </div>
  <!-- Botao para abrir o modal de cupom -->
  <button class="open-modal-btn botao-cupom" onclick="openModal()">Adicionar Cupom</button>

  <button id="btnRemoverCupom" class="remove-cupom-btn" onclick="removerCupom()">
    Remover Cupom
  </button>

  <!-- Modal de cupom -->
  <div class="modal-overlay" id="modalOverlay">
    <div class="modal">
      <button class="close-btn" onclick="closeModal()">&times;</button>
      <h2>ADICIONE O CUPOM</h2>
      <input type="text" id="nome" value="" readonly maxlength="10" />



      <div class="keyboard" id="keyboard"></div>
    </div>
  </div>
  <!-- Modal de Mensagem -->
  <div class="modal-msg-overlay" id="modalMsgOverlay">
    <div class="modal-msg">
      <p id="modalMsgTexto"></p>
      <button onclick="fecharModalMsg()">Fechar</button>
    </div>
  </div>


  </div>
  <main class="cart-container">

    <div class="cart-items"></div>

    <section class="suggestions">
      <h2>Turbine seu pedido!</h2>
      <div class="suggestions-container">
        <div class="suggestion-item">
          <img src="~/img/bebidas.png" alt="Free Refill">
          <p>Free Refill</p>
          <p>R$ 5,00</p>
          <button style="margin-top: 25px;">+</button>
        </div>
        <div class="suggestion-item">
          <img src="~/img/d4u1GTvl_kmUrrsUwaj0OV0huie-m7AFB15UzmGDqoU.jpg" alt="Batata Frita Grande">
          <p>Batata Frita Grande</p>
          <p>R$ 8,00</p>
          <button>+</button>
        </div>
        <div class="suggestion-item">
          <img src="~/img/sobremesas1.jpg" alt="Casquinha Baunilha">
          <p>Casquinha Baunilha</p>
          <p>R$ 4,00</p>
          <button>+</button>
        </div>
      </div>
    </section>
  </main>


  <footer class="cart-summary">
    <div class="total">
      <p>Total a pagar:</p>
      <p class="total-price">R$ 0,00</p>
    </div>
    <button class="checkout-btn" onclick="redirecionarEscolha()">Finalizar Pedido</button>
    <p class="cancel-order">Cancelar Pedido</p>
  </footer>

</body>

</html>

<script>
  const cardapioUrl = '@cardapioUrl';

  function redirecionarCardapio() {
    window.location.href = cardapioUrl;
  }

  function redirecionarEscolha() {
    window.location.href = "escolha";
  }

  // Atualiza os totais do footer dinamicamente
  function atualizarFooterCarrinho() {
    const totalItens = sessionStorage.getItem("totalItens") || 0;
    let totalPedido = sessionStorage.getItem("totalPedido");
    totalPedido = parseFloat(totalPedido);
    if (isNaN(totalPedido)) totalPedido = 0;
    // Se quiser exibir o total de itens no carrinho, adicione um elemento e atualize aqui
    // Exemplo: document.getElementById("total-itens").textContent = totalItens;
    const totalPreco = document.querySelector(".total-price");
    if (totalPreco) totalPreco.textContent = `R$ ${totalPedido.toFixed(2).replace('.', ',')}`;
  }
  atualizarFooterCarrinho();
  window.addEventListener('storage', atualizarFooterCarrinho);
  document.addEventListener('visibilitychange', function() {
    if (!document.hidden) atualizarFooterCarrinho();
  });
</script>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    let itens = [];
    try {
        itens = JSON.parse(sessionStorage.getItem("itensCarrinho")) || [];
        if (!Array.isArray(itens)) itens = [];
    } catch (e) {
        itens = [];
    }
    const container = document.querySelector(".cart-items");
    const totalPreco = document.querySelector(".total-price");

    container.innerHTML = ""; // Limpa conteúdo fixo
    let totalGeral = 0;
    
    // Filtra itens válidos e calcula total
    const itensValidos = itens.filter(item => {
        if (!item || !item.nome || isNaN(item.total) || item.total <= 0) {
            console.warn("Item inválido encontrado:", item);
            return false;
        }
        return true;
    });
    
    itensValidos.forEach((item, index) => {
      // Mostra apenas os ingredientes extras (que foram adicionados além do padrão)
      let ingredientesTexto = "";
      if (item.ingredientesExtras && Object.keys(item.ingredientesExtras).length > 0) {
        const ingredientesExtras = Object.entries(item.ingredientesExtras)
          .map(([nome, qtd]) => `+${qtd}x ${nome}`)
          .join(", ");
        ingredientesTexto = ingredientesExtras;
      } else {
        ingredientesTexto = "Sem ingredientes extras";
      }

      const itemTotal = parseFloat(item.total) || 0;
      totalGeral += itemTotal;

      container.innerHTML += `
        <div class="cart-item">
            <img src="${item.imagem || ''}" alt="${item.nome}" onerror="this.src='/img/default.png'; this.onerror=null;">
            <div class="item-info">
                <h2>${item.nome}</h2>
                <p>${ingredientesTexto}</p>
            </div>
            <div class="item-price">
                <p>R$ ${itemTotal.toFixed(2).replace(".", ",")}</p>
                <div class="quantity">
                    <button onclick="alterarQtd(${index}, -1)">-</button>
                    <span>${item.quantidade || 1}</span>
                    <button onclick="alterarQtd(${index}, 1)">+</button>
                    <p class="edit-item"><a href="/Home/Personalizar/${item.id}?editando=true">Editar Item</a></p>
                </div>
            </div>
        </div>
      `;
      
      // Debug da imagem no carrinho
      console.log(`Imagem do item ${item.nome}:`, item.imagem);
    });

    if (totalPreco) totalPreco.textContent = `R$ ${totalGeral.toFixed(2).replace(".", ",")}`;

    // Atualiza o sessionStorage com apenas itens válidos
    if (itensValidos.length !== itens.length) {
        sessionStorage.setItem("itensCarrinho", JSON.stringify(itensValidos));
        sessionStorage.setItem("totalItens", itensValidos.reduce((sum, item) => sum + (item.quantidade || 1), 0));
        sessionStorage.setItem("totalPedido", totalGeral.toFixed(2));
    }

    alert("Itens no carrinho: " + itensValidos.map(i => i.nome).join(", "));
  });

  function alterarQtd(index, delta) {
    let itens = JSON.parse(sessionStorage.getItem("itensCarrinho")) || [];
    if (!itens[index]) return;

    itens[index].quantidade = (itens[index].quantidade || 1) + delta;
    if (itens[index].quantidade <= 0) {
      itens.splice(index, 1); // Remove item se quantidade for zero
    } else {
      itens[index].total = itens[index].quantidade * (itens[index].precoUnitario || 0);
    }

    sessionStorage.setItem("itensCarrinho", JSON.stringify(itens));

    // Atualiza total
    let totalItens = 0, totalPedido = 0;
    itens.forEach(i => {
      totalItens += (i.quantidade || 0);
      totalPedido += (i.total || 0);
    });

    sessionStorage.setItem("totalItens", totalItens);
    sessionStorage.setItem("totalPedido", totalPedido.toFixed(2));

    // Debug dos totais
    console.log("Carrinho - Salvando totais:", { totalItens, totalPedido });

    location.reload(); // Recarrega a tela para atualizar os dados
  }
</script>

<script>
  function exibirMensagemCupom(texto) {
    const overlay = document.getElementById("modalMsgOverlay");
    const msgTexto = document.getElementById("modalMsgTexto");

    msgTexto.textContent = texto;
    overlay.style.display = "flex";
  }

  function fecharModalMsg() {
    document.getElementById("modalMsgOverlay").style.display = "none";
  }

  function openModal() {
    document.getElementById("modalOverlay").style.display = "flex";
  }

  function closeModal() {
    document.getElementById("modalOverlay").style.display = "none";
  }

  window.onload = () => {
    const keyboard = document.getElementById('keyboard');
    const input = document.getElementById('nome');

    const keys = [
      ..."ABCDEFGHIJ",
      ..."KLMNOPQRST",
      ..."UVWXYZ",
      "←", "Resetar", "Espaço", "Enter"
    ];

    keys.forEach(key => {
      const button = document.createElement('button');
      button.textContent = key;
      button.classList.add('key');

      if (["Resetar", "Espaço", "Enter"].includes(key)) {
        button.classList.add('key-spc');
      }
      if (["←"].includes(key)) {
        button.classList.add('key-wide');
      }
      if (key === "Enter") button.classList.add("key-enter");
      if (key === "Resetar") button.classList.add("key-reset");

      button.addEventListener('click', () => {
        if (key === "←") {
          input.value = input.value.slice(0, -1);
        } else if (key === "Resetar") {
          input.value = "";
        } else if (key === "Espaço") {
          if (input.value.length < 11) input.value += " ";
        } else if (key === "Enter") {
          submeterCupom(input.value);
        } else {
          if (input.value.length < 11) input.value += key;
        }
      });

      keyboard.appendChild(button);
    });

    // Protege caso o botão "continuar" exista
    const continuar = document.getElementById('continuar');
    if (continuar) {
      continuar.addEventListener('click', () => {
        submeterCupom(input.value);
      });
    }
  };

  function submeterCupom(valorCupom) {
    if (!valorCupom.trim()) {
      alert("Por favor, insira um cupom válido.");
      return;
    }
    if (sessionStorage.getItem("cupomAplicado") === "true") {
      exibirMensagemCupom("Cupom já aplicado a este pedido.");
      return;
    }
    fetch(`/Home/VerificarCupom?codigo=${encodeURIComponent(valorCupom)}`)
      .then(response => response.json())
      .then(data => {
        if (data.valido) {
          exibirMensagemCupom(`Cupom "${valorCupom}" aplicado com sucesso! 🎉`);

          const totalPreco = document.querySelector(".total-price");
          const valorAtual = parseFloat(totalPreco.textContent.replace("R$", "").replace(",", "."));
          const novoTotal = valorAtual * (1 - data.desconto);

          totalPreco.textContent = `R$ ${novoTotal.toFixed(2).replace(".", ",")}`;
          sessionStorage.setItem("cupomAplicado", "true");
          document.getElementById("btnRemoverCupom").style.display = "inline-block";
        } else {
          exibirMensagemCupom(data.mensagem);
        }

        closeModal();
        document.getElementById("nome").value = "";
      })
      .catch(err => {
        alert("Erro ao verificar cupom.");
        console.error(err);
      });
  }

  function removerCupom() {
    if (sessionStorage.getItem("cupomAplicado") !== "true") {
      exibirMensagemCupom("Nenhum cupom aplicado no momento.");
      return;
    }

    // Remove o cupom da sessão
    document.getElementById("btnRemoverCupom").style.display = "none";
    sessionStorage.removeItem("cupomAplicado");

    exibirMensagemCupom("Cupom removido com sucesso!");
  }
  if (sessionStorage.getItem("cupomAplicado") === "true") {
    document.getElementById("btnRemoverCupom").style.display = "inline-block";
  }

</script>
